{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/factory.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ln from '@stdlib/math-base-special-ln';\nimport log1p from '@stdlib/math-base-special-log1p';\nimport abs2 from '@stdlib/math-base-special-abs2';\nimport erfc from '@stdlib/math-base-special-erfc';\nimport erfcx from '@stdlib/math-base-special-erfcx';\nimport NINF from '@stdlib/constants-float64-ninf';\nimport isnan from '@stdlib/math-base-assert-is-nan';\n\n\n// VARIABLES //\n\nvar INV_SQRT_TWO = 0.7071067811865475; // 1/sqrt(2)\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm of the cumulative distribution function (CDF) for a normal distribution with mean `mu` and standard deviation `sigma` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - mean\n* @param {NonNegativeNumber} sigma - standard deviation\n* @returns {number} logarithm of cumulative distribution function\n*\n* @example\n* var y = logcdf( 2.0, 0.0, 1.0 );\n* // returns ~-0.023\n*\n* @example\n* var y = logcdf( -1.0, 4.0, 2.0 );\n* // returns ~-5.082\n*\n* @example\n* var y = logcdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logcdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logcdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative standard deviation:\n* var y = logcdf( 2.0, 0.0, -1.0 );\n* // returns NaN\n*\n* @example\n* var y = logcdf( 2.0, 8.0, 0.0 );\n* // returns -Infinity\n*\n* @example\n* var y = logcdf( 8.0, 8.0, 0.0 );\n* // returns 0.0\n*/\nfunction logcdf( x, mu, sigma ) {\n\tvar z;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( sigma ) ||\n\t\tsigma < 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( sigma === 0.0 ) {\n\t\treturn (x < mu) ? NINF : 0.0;\n\t}\n\tz = ( x - mu ) / sigma;\n\tif ( z < -1.0 ) {\n\t\treturn ln( erfcx( -z * INV_SQRT_TWO ) / 2.0 ) - ( abs2(z) / 2.0 );\n\t}\n\t// Case: z >= -1.0:\n\treturn log1p( -erfc( z * INV_SQRT_TWO ) / 2.0 );\n}\n\n\n// EXPORTS //\n\nexport default logcdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport constantFunction from '@stdlib/utils-constant-function';\nimport { factory as degenerate } from '@stdlib/stats-base-dists-degenerate-logcdf';\nimport isnan from '@stdlib/math-base-assert-is-nan';\nimport log1p from '@stdlib/math-base-special-log1p';\nimport abs2 from '@stdlib/math-base-special-abs2';\nimport erfc from '@stdlib/math-base-special-erfc';\nimport erfcx from '@stdlib/math-base-special-erfcx';\nimport ln from '@stdlib/math-base-special-ln';\n\n\n// VARIABLES //\n\nvar INV_SQRT_TWO = 0.7071067811865475; // 1/sqrt(2)\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the natural logarithm of the cumulative distribution function (CDF) for a normal distribution.\n*\n* @param {number} mu - mean\n* @param {NonNegativeNumber} sigma - standard deviation\n* @returns {Function} logcdf\n*\n* @example\n* var logcdf = factory( 10.0, 2.0 );\n* var y = logcdf( 10.0 );\n* // returns ~-0.693\n*\n* y = logcdf( 5.0 );\n* // returns ~-5.082\n*/\nfunction factory( mu, sigma ) {\n\tif (\n\t\tisnan( mu ) ||\n\t\tisnan( sigma ) ||\n\t\tsigma < 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( sigma === 0.0 ) {\n\t\treturn degenerate( mu );\n\t}\n\n\treturn logcdf;\n\n\t/**\n\t* Evaluates the natural logarithm of the cumulative distribution function (CDF) for a normal distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated logcdf\n\t*\n\t* @example\n\t* var y = logcdf( -3.14 );\n\t* // returns <number>\n\t*/\n\tfunction logcdf( x ) {\n\t\tvar z = ( x - mu ) / sigma;\n\t\tif ( z < -1.0 ) {\n\t\t\treturn ln( erfcx( -z * INV_SQRT_TWO ) / 2.0 ) - ( abs2(z) / 2.0 );\n\t\t}\n\t\t// Case: z >= -1.0:\n\t\treturn log1p( -erfc( z * INV_SQRT_TWO ) / 2.0 );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Natural logarithm of the cumulative distribution function (CDF) for a normal distribution.\n*\n* @module @stdlib/stats-base-dists-normal-logcdf\n*\n* @example\n* import logcdf from '@stdlib/stats-base-dists-normal-logcdf';\n*\n* var y = logcdf( 2.0, 0.0, 1.0 );\n* // returns ~-0.023\n*\n* var mylogcdf = logcdf.factory( 10.0, 2.0 );\n* y = mylogcdf( 10.0 );\n* // returns ~-0.693\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["logcdf","x","mu","sigma","z","isnan","NaN","NINF","ln","erfcx","abs2","log1p","erfc","factory","constantFunction","degenerate","setReadOnly","main"],"mappings":";;k8BA+EA,SAASA,EAAQC,EAAGC,EAAIC,GACvB,IAAIC,EACJ,OACCC,EAAOJ,IACPI,EAAOH,IACPG,EAAOF,IACPA,EAAQ,EAEDG,IAEO,IAAVH,EACIF,EAAIC,EAAMK,EAAO,GAE1BH,GAAMH,EAAIC,GAAOC,IACP,EACFK,EAAIC,EA7DM,mBA6DEL,GAAqB,GAAUM,EAAKN,GAAK,EAGtDO,GAAQC,EAhEG,kBAgEGR,GAAqB,EAC3C,CC5CA,SAASS,EAASX,EAAIC,GACrB,OACCE,EAAOH,IACPG,EAAOF,IACPA,EAAQ,EAEDW,EAAkBR,KAEX,IAAVH,EACGY,EAAYb,GAgBpB,SAAiBD,GAChB,IAAIG,GAAMH,EAAIC,GAAOC,EACrB,GAAKC,GAAK,EACT,OAAOI,EAAIC,EAhDK,mBAgDGL,GAAqB,GAAUM,EAAKN,GAAK,EAG7D,OAAOO,GAAQC,EAnDE,kBAmDIR,GAAqB,EAC1C,CACF,CC1CAY,EAAAC,EAAA,UAAAJ"}